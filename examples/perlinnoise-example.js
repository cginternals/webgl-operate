!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n(require("gloperate"));else if("function"==typeof define&&define.amd)define(["gloperate"],n);else{var t="object"==typeof exports?n(require("gloperate")):n(e.gloperate);for(var i in t)("object"==typeof exports?exports:e)[i]=t[i]}}(self,(e=>(()=>{var n={4558:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Example=void 0;const i=t(4160);class s extends i.Initializable{showSpinner(){document.getElementsByClassName("spinner").item(0).style.display="inline"}hideSpinner(){document.getElementsByClassName("spinner").item(0).style.display="none"}expose(){window.canvas=this.canvas,window.context=this.canvas.context,window.controller=this.canvas.controller,window.renderer=this.renderer}initialize(e){const n=this.onInitialize(e);return this.renderer.loadingStatus$.subscribe((e=>{e===i.LoadingStatus.Finished?this.hideSpinner():e===i.LoadingStatus.Started&&this.showSpinner()})),this.expose(),n}uninitialize(){this.onUninitialize()}enableFullscreenOnCtrlClick(){const e=this.canvas.element;e.addEventListener("click",(n=>{n.ctrlKey&&i.viewer.Fullscreen.toggle(e)}))}}n.Example=s},7509:e=>{e.exports="precision highp float;\nprecision highp int;\n\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else \n    #define varying in\n#endif\n\n\n#if __VERSION__ == 100\n    #define fragColor gl_FragColor\n#else\n    layout(location = 0) out vec4 fragColor;\n#endif\n\nuniform float u_aspect;\nuniform int u_method;\nuniform float u_seed;\n\nvarying vec2 v_uv;\n\n\nfloat rand(in vec2 uv) {\n    // return mod(uv.x * 12213.231 + uv.y * 32132.567, 1.0);\n    return fract(sin(u_seed + dot(uv, vec2(12.9898, 78.233))) * 4375.5453123);\n}\n\nvec2 rand2(in vec2 uv) {\n    vec2 v = vec2(dot(uv, vec2(127.1, 311.7)), dot(uv, vec2(269.5, 183.3)));\n    return clamp(normalize(-1.0 + 2.0 * fract(sin(u_seed + v) * 43758.5453123)), -1.0, 1.0);\n}\n\nfloat smoothstep3(in float t) {\n    // 3t^2 - 2t^3, same as smoothstep(0.0, 1.0, t);\n    return t * t * (3.0 - 2.0 * t);\n}\nfloat  smoothstep5(in float t) {\n    // 6t^5 - 15t^4 + 10t^3\n    return t * t * t * (t * (6.0 * t - 15.0) + 10.0);\n}\nfloat  smoothstep7(in float t) {\n    // -20x^7 + 70x^6 - 84x^5 + 35x^4\n    return t * t * t * t * (t * (t * (70.0 - 20.0 * t) - 84.0) + 35.0);\n}\nfloat  smoothstep9(in float t) {\n    // 70x^9 - 315x^8 + 540x^7 - 420x^6 + 126x^5\n    return t * t * t * t * t * (t * (t * (t * (70.0 * t - 315.0) + 540.0) - 420.0) + 126.0);\n}\n\nfloat smoothen(in float t) {\n    // return smoothstep(0.0, 1.0, t);\n    // return smoothstep3(t);\n    return smoothstep5(t);\n    // return smoothstep7(t);\n    // return smoothstep9(t);\n}\n\nfloat value_noise(in vec2 st) {\n    ivec2 i = ivec2(floor(st));\n    vec2 f = fract(st);\n\n    vec4 r = vec4(\n        rand(vec2(i + ivec2(0, 0))),\n        rand(vec2(i + ivec2(1, 0))),\n        rand(vec2(i + ivec2(0, 1))),\n        rand(vec2(i + ivec2(1, 1))));\n\n    vec2 fm = vec2(smoothen(f[0]), smoothen(f[1]));\n    return mix(mix(r[0], r[1], fm[0]), mix(r[2], r[3], fm[0]), fm[1]);\n}\n\nfloat gradient_noise(in vec2 st) {\n    ivec2 i = ivec2(floor(st));\n    vec2 f = fract(st);\n\n    vec4 r = vec4(\n        dot(rand2(vec2(i + ivec2(0, 0))), f - vec2(0.0, 0.0)),\n        dot(rand2(vec2(i + ivec2(1, 0))), f - vec2(1.0, 0.0)),\n        dot(rand2(vec2(i + ivec2(0, 1))), f - vec2(0.0, 1.0)),\n        dot(rand2(vec2(i + ivec2(1, 1))), f - vec2(1.0, 1.0)));\n\n    vec2 fm = vec2(smoothen(f[0]), smoothen(f[1]));\n    return mix(mix(r[0], r[1], fm[0]), mix(r[2], r[3], fm[0]), fm[1]) * 0.5 + 0.5;\n}\n\nconst float pi = 3.14159265;\nconst float skewx = cos(30.0 * pi / 180.0);\nconst float iskewx = 1.0 / skewx;\n\nvec2 skew(in vec2 st) {\n    // return st;\n    return vec2(iskewx * st.x, 0.5 * st.x + st.y);\n}\n\nvec2 unskew(in vec2 st) {\n    // return st;\n    return vec2( skewx * st.x, st.y - 0.5 * st.x);\n}\n\n// vec3 simplex(in vec2 st) {\n//     vec2 f = fract(skew(st));\n//     return mix(\n//         // vec3(f[0], 1.0 - f[1], f[1] - f[0]),\n//         // vec3(1.0 - f[0], f[1], f[0] - f[1]),\n//         vec3(f[0], 1.0 - f[1], f[1] - f[0]),\n//         vec3(f[1], 1.0 - f[0], f[0] - f[1]),\n//         step(f[1], f[0]));\n// }\n\nvec3 simplex(in vec2 st_fract_of_skewed) {\n    vec2 f = st_fract_of_skewed;\n    return mix(\n        vec3(1.0 - f[1], f[0], f[1] - f[0]),\n        vec3(1.0 - f[0], f[1], f[0] - f[1]),\n        step(f[1], f[0]));\n}\n\nfloat simplex_noise(in vec2 st) {\n    vec2  st_skewed  = skew(st);\n\n    vec2  f = fract(st_skewed);\n    ivec2 i = ivec2(floor(st_skewed));\n\n    vec3 s = normalize(simplex(f));\n    s = 1.0 - sqrt(1.0 - s * s);\n\n    vec2 p0 = unskew(f - /* skew? */(vec2(0.0, 0.0)));\n    vec2 p1 = unskew(f - /* skew? */(vec2(1.0, 1.0)));\n    vec2 p2 = unskew(f - /* skew? */(step(f.yx, f.xy)));\n\n    vec2 g0 = rand2(vec2(i) + vec2(0, 0));\n    vec2 g1 = rand2(vec2(i) + vec2(1, 1));\n    vec2 g2 = rand2(vec2(i) + step(f.yx, f.xy));\n\n    float r0 = dot(g0, p0) * (s[0]);\n    float r1 = dot(g1, p1) * (s[1]);\n    float r2 = dot(g2, p2) * (s[2]);\n\n    return r0 + r1 + r2 + 0.5;\n}\n\nvoid main(void)\n{\n    vec2 uv = v_uv;\n    vec2 uv_scaled = uv * 8.0 * vec2(u_aspect, 1.0);\n\n    vec4 o0, o1;\n\n    switch(u_method) {\n        case 0: // value noise\n        {\n            o0 = vec4(\n                value_noise(uv_scaled *   1.0),\n                value_noise(uv_scaled *   2.0),\n                value_noise(uv_scaled *   4.0),\n                value_noise(uv_scaled *   8.0));\n            o1 = vec4(\n                value_noise(uv_scaled *  16.0),\n                value_noise(uv_scaled *  32.0),\n                0.0,  //value_noise(uv_scaled *  64.0),\n                0.0); //value_noise(uv_scaled * 128.0));\n        }\n        break;\n\n        case 1: // gradient noise\n        {\n            o0 = vec4(\n                gradient_noise(uv_scaled *   1.0),\n                gradient_noise(uv_scaled *   2.0),\n                gradient_noise(uv_scaled *   4.0),\n                gradient_noise(uv_scaled *   8.0));\n            o1 = vec4(\n                gradient_noise(uv_scaled *  16.0),\n                gradient_noise(uv_scaled *  32.0),\n                0.0,  //gradient_noise(uv_scaled *  64.0),\n                0.0); //gradient_noise(uv_scaled * 128.0));\n        }\n        break;\n\n        case 2: // simplex noise\n        {\n             o0 = vec4(\n                simplex_noise(uv_scaled *   1.0),\n                simplex_noise(uv_scaled *   2.0),\n                simplex_noise(uv_scaled *   4.0),\n                simplex_noise(uv_scaled *   8.0));\n            o1 = vec4(\n                simplex_noise(uv_scaled *  16.0),\n                simplex_noise(uv_scaled *  32.0),\n                0.0,  //simplex_noise(uv_scaled *  64.0),\n                0.0); //simplex_noise(uv_scaled * 128.0));\n        }\n        break;\n\n        default:\n        break;\n    }\n\n    // weights for the eight octaves ...\n    vec4 w0 = vec4(32.0, 16.0, 8.0, 4.0); // vec4(128.0, 64.0, 32.0, 16.0);\n    vec4 w1 = vec4( 2.0,  1.0, 0.0, 0.0); // vec4(8.0, 4.0, 2.0, 1.0);\n\n    // top-to-bottom masking of number of octaves used\n    vec4 se = vec4(0.0, 1.0, 2.0, 3.0) / 6.0; // vec4(0.000, 0.125, 0.250, 0.375);\n    vec4 s0 = step(se + 0.0, vec4(uv.x));\n    vec4 s1 = step(se + 4.0 / 6.0, vec4(uv.x));\n\n    float n = (dot(o0 * w0, s0) + dot(o1 * w1, s1)) / (dot(w0, s0) + dot(w1, s1));\n    fragColor = vec4(vec3(n), 1.0);\n\n    // float r = rand(uv_scaled);\n\n    // float r = value_noise(uv_scaled);\n    // float r = gradient_noise(uv_scaled);\n\n    // float foo = 1.0 / 512.0; // 256 + 128 + 64 ... + 2;\n\n}\n"},3181:e=>{e.exports="precision highp float;\nprecision highp int;\n\n\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying out\n#endif\n\n\n\n#if __VERSION__ == 100\n    attribute vec2 a_position;\n#else\n    layout (location = 0) in vec2 a_position;\n#endif\n\nuniform float u_aspect;\n\nvarying vec2 v_uv;\n\nvoid main(void)\n{\n    v_uv = a_position * 0.5 + 0.5;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n}\n"},4160:n=>{"use strict";n.exports=e}},t={};function i(e){var s=t[e];if(void 0!==s)return s.exports;var r=t[e]={exports:{}};return n[e](r,r.exports,i),r.exports}var s={};return(()=>{"use strict";var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.PerlinNoiseExample=void 0;const n=i(4160),t=i(4558);class r extends n.Renderer{onInitialize(e,t){this._defaultFBO=new n.DefaultFramebuffer(this._context,"DefaultFBO"),this._defaultFBO.initialize(),this._defaultFBO.bind();const s=this._context.gl;this._ndcTriangle=new n.NdcFillingTriangle(this._context,"NdcFillingTriangle"),this._ndcTriangle.initialize();const r=new n.Shader(this._context,s.VERTEX_SHADER,"perlin.vert");r.initialize(i(3181));const o=new n.Shader(this._context,s.FRAGMENT_SHADER,"pattern (in-line)");o.initialize(i(7509)),this._program=new n.Program(this._context,"CanvasSizeProgram"),this._program.initialize([r,o],!1),this._program.attribute("a_vertex",this._ndcTriangle.vertexLocation),this._program.link(),this._program.bind(),this._uMethod=this._program.uniform("u_method");const a=this._canvasSize[0]/this._canvasSize[1];return s.uniform1f(this._program.uniform("u_aspect"),a),s.uniform1f(this._program.uniform("u_seed"),Math.random()),this._program.unbind(),this.finishLoading(),!0}onUninitialize(){super.uninitialize(),this._ndcTriangle.uninitialize(),this._program.uninitialize(),this._defaultFBO.uninitialize()}onDiscarded(){this._altered.alter("canvasSize"),this._altered.alter("clearColor"),this._altered.alter("frameSize")}onUpdate(){return this._altered.any}onPrepare(){const e=this._context.gl;if(this._altered.canvasSize){const n=this._canvasSize[0]/this._canvasSize[1];this._program.bind(),e.uniform1f(this._program.uniform("u_aspect"),n),this._program.unbind()}this._altered.clearColor&&this._defaultFBO.clearColor(this._clearColor),this._altered.reset()}onFrame(){const e=this._context.gl;e.viewport(0,0,this._canvasSize[0],this._canvasSize[1]),this._defaultFBO.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT,!1,!1),this._program.bind();const n=(new Date).getTime()%1e7*.001;e.uniform1f(this._program.uniform("u_time"),n),this._ndcTriangle.bind();const t=this._frameSize[0],i=(this._frameSize[1]-2)/3;e.enable(e.SCISSOR_TEST),e.scissor(0,0*(i+1),t,i),e.uniform1i(this._uMethod,2),this._ndcTriangle.draw(),e.scissor(0,1*(i+1),t,i),e.uniform1i(this._uMethod,1),this._ndcTriangle.draw(),e.scissor(0,2*(i+1),t,i),e.uniform1i(this._uMethod,0),this._ndcTriangle.draw(),this._ndcTriangle.unbind()}onSwap(){}}class o extends t.Example{onInitialize(e){return this._canvas=new n.Canvas(e,{antialias:!1}),this._canvas.controller.multiFrameNumber=1,this._canvas.framePrecision=n.Wizard.Precision.byte,this._canvas.frameScale=[1,1],this._renderer=new r,this._canvas.renderer=this._renderer,!0}onUninitialize(){this._canvas.dispose(),this._renderer.uninitialize()}get canvas(){return this._canvas}get renderer(){return this._renderer}}e.PerlinNoiseExample=o})(),s})()));
//# sourceMappingURL=perlinnoise-example.js.map