{"version":3,"file":"perlinnoise-example.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./example.ts","webpack:///./data/perlin.frag","webpack:///./data/perlin.vert","webpack:///external umd \"gloperate\"","webpack:///webpack/bootstrap","webpack:///./perlinnoise-example.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"gloperate\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"gloperate\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"gloperate\")) : factory(root[\"gloperate\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__4160__) => {\nreturn ","\n/* spellchecker: disable */\n\nimport {\n    Canvas,\n    Initializable,\n    LoadingStatus,\n    Renderer,\n    viewer,\n} from 'webgl-operate';\n\n/* spellchecker: enable */\n\n\nexport abstract class Example extends Initializable {\n\n    /**\n     * Hide the loading spinner.\n     */\n    protected showSpinner(): void {\n        const spinnerElement = document.getElementsByClassName('spinner').item(0)!;\n        (spinnerElement as HTMLElement).style.display = 'inline';\n    }\n\n    /**\n     * Hide the loading spinner.\n     */\n    protected hideSpinner(): void {\n        const spinnerElement = document.getElementsByClassName('spinner').item(0)!;\n        (spinnerElement as HTMLElement).style.display = 'none';\n    }\n\n    protected expose(): void {\n\n        (window as any)['canvas'] = this.canvas;\n        (window as any)['context'] = this.canvas.context;\n        (window as any)['controller'] = this.canvas.controller;\n\n        (window as any)['renderer'] = this.renderer;\n    }\n\n    initialize(element: HTMLCanvasElement | string): boolean {\n        const result = this.onInitialize(element);\n\n        this.renderer.loadingStatus$.subscribe((status: LoadingStatus) => {\n            if (status === LoadingStatus.Finished) {\n                this.hideSpinner();\n            } else if (status === LoadingStatus.Started) {\n                this.showSpinner();\n            }\n        });\n\n        this.expose();\n\n        return result;\n    }\n\n    uninitialize(): void {\n        this.onUninitialize();\n    }\n\n    abstract onInitialize(element: HTMLCanvasElement | string): boolean;\n\n    abstract onUninitialize(): void;\n\n    abstract get renderer(): Renderer;\n\n    abstract get canvas(): Canvas;\n\n    enableFullscreenOnCtrlClick(): void {\n\n        const e = this.canvas.element;\n        e.addEventListener('click', (event) => {\n            if (event.ctrlKey) { viewer.Fullscreen.toggle(e); }\n        });\n    }\n}\n","module.exports = \"precision highp float;\\nprecision highp int;\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else \\n    #define varying in\\n#endif\\n\\n\\n#if __VERSION__ == 100\\n    #define fragColor gl_FragColor\\n#else\\n    layout(location = 0) out vec4 fragColor;\\n#endif\\n\\nuniform float u_aspect;\\nuniform int u_method;\\nuniform float u_seed;\\n\\nvarying vec2 v_uv;\\n\\n\\nfloat rand(in vec2 uv) {\\n    // return mod(uv.x * 12213.231 + uv.y * 32132.567, 1.0);\\n    return fract(sin(u_seed + dot(uv, vec2(12.9898, 78.233))) * 4375.5453123);\\n}\\n\\nvec2 rand2(in vec2 uv) {\\n    vec2 v = vec2(dot(uv, vec2(127.1, 311.7)), dot(uv, vec2(269.5, 183.3)));\\n    return clamp(normalize(-1.0 + 2.0 * fract(sin(u_seed + v) * 43758.5453123)), -1.0, 1.0);\\n}\\n\\nfloat smoothstep3(in float t) {\\n    // 3t^2 - 2t^3, same as smoothstep(0.0, 1.0, t);\\n    return t * t * (3.0 - 2.0 * t);\\n}\\nfloat  smoothstep5(in float t) {\\n    // 6t^5 - 15t^4 + 10t^3\\n    return t * t * t * (t * (6.0 * t - 15.0) + 10.0);\\n}\\nfloat  smoothstep7(in float t) {\\n    // -20x^7 + 70x^6 - 84x^5 + 35x^4\\n    return t * t * t * t * (t * (t * (70.0 - 20.0 * t) - 84.0) + 35.0);\\n}\\nfloat  smoothstep9(in float t) {\\n    // 70x^9 - 315x^8 + 540x^7 - 420x^6 + 126x^5\\n    return t * t * t * t * t * (t * (t * (t * (70.0 * t - 315.0) + 540.0) - 420.0) + 126.0);\\n}\\n\\nfloat smoothen(in float t) {\\n    // return smoothstep(0.0, 1.0, t);\\n    // return smoothstep3(t);\\n    return smoothstep5(t);\\n    // return smoothstep7(t);\\n    // return smoothstep9(t);\\n}\\n\\nfloat value_noise(in vec2 st) {\\n    ivec2 i = ivec2(floor(st));\\n    vec2 f = fract(st);\\n\\n    vec4 r = vec4(\\n        rand(vec2(i + ivec2(0, 0))),\\n        rand(vec2(i + ivec2(1, 0))),\\n        rand(vec2(i + ivec2(0, 1))),\\n        rand(vec2(i + ivec2(1, 1))));\\n\\n    vec2 fm = vec2(smoothen(f[0]), smoothen(f[1]));\\n    return mix(mix(r[0], r[1], fm[0]), mix(r[2], r[3], fm[0]), fm[1]);\\n}\\n\\nfloat gradient_noise(in vec2 st) {\\n    ivec2 i = ivec2(floor(st));\\n    vec2 f = fract(st);\\n\\n    vec4 r = vec4(\\n        dot(rand2(vec2(i + ivec2(0, 0))), f - vec2(0.0, 0.0)),\\n        dot(rand2(vec2(i + ivec2(1, 0))), f - vec2(1.0, 0.0)),\\n        dot(rand2(vec2(i + ivec2(0, 1))), f - vec2(0.0, 1.0)),\\n        dot(rand2(vec2(i + ivec2(1, 1))), f - vec2(1.0, 1.0)));\\n\\n    vec2 fm = vec2(smoothen(f[0]), smoothen(f[1]));\\n    return mix(mix(r[0], r[1], fm[0]), mix(r[2], r[3], fm[0]), fm[1]) * 0.5 + 0.5;\\n}\\n\\nconst float pi = 3.14159265;\\nconst float skewx = cos(30.0 * pi / 180.0);\\nconst float iskewx = 1.0 / skewx;\\n\\nvec2 skew(in vec2 st) {\\n    // return st;\\n    return vec2(iskewx * st.x, 0.5 * st.x + st.y);\\n}\\n\\nvec2 unskew(in vec2 st) {\\n    // return st;\\n    return vec2( skewx * st.x, st.y - 0.5 * st.x);\\n}\\n\\n// vec3 simplex(in vec2 st) {\\n//     vec2 f = fract(skew(st));\\n//     return mix(\\n//         // vec3(f[0], 1.0 - f[1], f[1] - f[0]),\\n//         // vec3(1.0 - f[0], f[1], f[0] - f[1]),\\n//         vec3(f[0], 1.0 - f[1], f[1] - f[0]),\\n//         vec3(f[1], 1.0 - f[0], f[0] - f[1]),\\n//         step(f[1], f[0]));\\n// }\\n\\nvec3 simplex(in vec2 st_fract_of_skewed) {\\n    vec2 f = st_fract_of_skewed;\\n    return mix(\\n        vec3(1.0 - f[1], f[0], f[1] - f[0]),\\n        vec3(1.0 - f[0], f[1], f[0] - f[1]),\\n        step(f[1], f[0]));\\n}\\n\\nfloat simplex_noise(in vec2 st) {\\n    vec2  st_skewed  = skew(st);\\n\\n    vec2  f = fract(st_skewed);\\n    ivec2 i = ivec2(floor(st_skewed));\\n\\n    vec3 s = normalize(simplex(f));\\n    s = 1.0 - sqrt(1.0 - s * s);\\n\\n    vec2 p0 = unskew(f - /* skew? */(vec2(0.0, 0.0)));\\n    vec2 p1 = unskew(f - /* skew? */(vec2(1.0, 1.0)));\\n    vec2 p2 = unskew(f - /* skew? */(step(f.yx, f.xy)));\\n\\n    vec2 g0 = rand2(vec2(i) + vec2(0, 0));\\n    vec2 g1 = rand2(vec2(i) + vec2(1, 1));\\n    vec2 g2 = rand2(vec2(i) + step(f.yx, f.xy));\\n\\n    float r0 = dot(g0, p0) * (s[0]);\\n    float r1 = dot(g1, p1) * (s[1]);\\n    float r2 = dot(g2, p2) * (s[2]);\\n\\n    return r0 + r1 + r2 + 0.5;\\n}\\n\\nvoid main(void)\\n{\\n    vec2 uv = v_uv;\\n    vec2 uv_scaled = uv * 8.0 * vec2(u_aspect, 1.0);\\n\\n    vec4 o0, o1;\\n\\n    switch(u_method) {\\n        case 0: // value noise\\n        {\\n            o0 = vec4(\\n                value_noise(uv_scaled *   1.0),\\n                value_noise(uv_scaled *   2.0),\\n                value_noise(uv_scaled *   4.0),\\n                value_noise(uv_scaled *   8.0));\\n            o1 = vec4(\\n                value_noise(uv_scaled *  16.0),\\n                value_noise(uv_scaled *  32.0),\\n                0.0,  //value_noise(uv_scaled *  64.0),\\n                0.0); //value_noise(uv_scaled * 128.0));\\n        }\\n        break;\\n\\n        case 1: // gradient noise\\n        {\\n            o0 = vec4(\\n                gradient_noise(uv_scaled *   1.0),\\n                gradient_noise(uv_scaled *   2.0),\\n                gradient_noise(uv_scaled *   4.0),\\n                gradient_noise(uv_scaled *   8.0));\\n            o1 = vec4(\\n                gradient_noise(uv_scaled *  16.0),\\n                gradient_noise(uv_scaled *  32.0),\\n                0.0,  //gradient_noise(uv_scaled *  64.0),\\n                0.0); //gradient_noise(uv_scaled * 128.0));\\n        }\\n        break;\\n\\n        case 2: // simplex noise\\n        {\\n             o0 = vec4(\\n                simplex_noise(uv_scaled *   1.0),\\n                simplex_noise(uv_scaled *   2.0),\\n                simplex_noise(uv_scaled *   4.0),\\n                simplex_noise(uv_scaled *   8.0));\\n            o1 = vec4(\\n                simplex_noise(uv_scaled *  16.0),\\n                simplex_noise(uv_scaled *  32.0),\\n                0.0,  //simplex_noise(uv_scaled *  64.0),\\n                0.0); //simplex_noise(uv_scaled * 128.0));\\n        }\\n        break;\\n\\n        default:\\n        break;\\n    }\\n\\n    // weights for the eight octaves ...\\n    vec4 w0 = vec4(32.0, 16.0, 8.0, 4.0); // vec4(128.0, 64.0, 32.0, 16.0);\\n    vec4 w1 = vec4( 2.0,  1.0, 0.0, 0.0); // vec4(8.0, 4.0, 2.0, 1.0);\\n\\n    // top-to-bottom masking of number of octaves used\\n    vec4 se = vec4(0.0, 1.0, 2.0, 3.0) / 6.0; // vec4(0.000, 0.125, 0.250, 0.375);\\n    vec4 s0 = step(se + 0.0, vec4(uv.x));\\n    vec4 s1 = step(se + 4.0 / 6.0, vec4(uv.x));\\n\\n    float n = (dot(o0 * w0, s0) + dot(o1 * w1, s1)) / (dot(w0, s0) + dot(w1, s1));\\n    fragColor = vec4(vec3(n), 1.0);\\n\\n    // float r = rand(uv_scaled);\\n\\n    // float r = value_noise(uv_scaled);\\n    // float r = gradient_noise(uv_scaled);\\n\\n    // float foo = 1.0 / 512.0; // 256 + 128 + 64 ... + 2;\\n\\n}\\n\"","module.exports = \"precision highp float;\\nprecision highp int;\\n\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else\\n    #define varying out\\n#endif\\n\\n\\n\\n#if __VERSION__ == 100\\n    attribute vec2 a_position;\\n#else\\n    layout (location = 0) in vec2 a_position;\\n#endif\\n\\nuniform float u_aspect;\\n\\nvarying vec2 v_uv;\\n\\nvoid main(void)\\n{\\n    v_uv = a_position * 0.5 + 0.5;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n}\\n\"","module.exports = __WEBPACK_EXTERNAL_MODULE__4160__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n/* spellchecker: disable */\n\nimport {\n    Canvas,\n    Context,\n    DefaultFramebuffer,\n    Invalidate,\n    NdcFillingTriangle,\n    Program,\n    Shader,\n    Renderer,\n    Wizard,\n} from 'webgl-operate';\n\nimport { Example } from './example';\n\n/* spellchecker: enable */\n\n// tslint:disable:max-classes-per-file\n\n\nclass PerlinNoiseRenderer extends Renderer {\n\n    protected _defaultFBO: DefaultFramebuffer;\n\n    protected _ndcTriangle: NdcFillingTriangle;\n\n    protected _program: Program;\n    protected _uMethod: WebGLUniformLocation;\n\n\n    /**\n     * Initializes and sets up rendering passes, navigation, loads a font face and links shaders with program.\n     * @param context - valid context to create the object for.\n     * @param identifier - meaningful name for identification of this instance.\n     * @param mouseEventProvider - required for mouse interaction\n     * @returns - whether initialization was successful\n     */\n    protected onInitialize(context: Context, callback: Invalidate,\n        /* eventProvider: EventProvider */): boolean {\n\n        /* Create framebuffers, textures, and render buffers. */\n\n        this._defaultFBO = new DefaultFramebuffer(this._context, 'DefaultFBO');\n        this._defaultFBO.initialize();\n        this._defaultFBO.bind();\n\n        /* Create and configure ndc triangle for rendering noise onto. */\n\n        const gl = this._context.gl;\n\n        this._ndcTriangle = new NdcFillingTriangle(this._context, 'NdcFillingTriangle');\n        this._ndcTriangle.initialize();\n\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'perlin.vert');\n        vert.initialize(require('./data/perlin.vert'));\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'pattern (in-line)');\n        frag.initialize(require('./data/perlin.frag'));\n\n        this._program = new Program(this._context, 'CanvasSizeProgram');\n        this._program.initialize([vert, frag], false);\n\n        this._program.attribute('a_vertex', this._ndcTriangle.vertexLocation);\n        this._program.link();\n\n        this._program.bind();\n        this._uMethod = this._program.uniform('u_method');\n\n        const aspect = this._canvasSize[0] / this._canvasSize[1];\n        gl.uniform1f(this._program.uniform('u_aspect'), aspect);\n        gl.uniform1f(this._program.uniform('u_seed'), Math.random());\n        this._program.unbind();\n\n        this.finishLoading();\n\n        return true;\n    }\n\n    /**\n     * Uninitializes Buffers, Textures, and Program.\n     */\n    protected onUninitialize(): void {\n        super.uninitialize();\n\n        this._ndcTriangle.uninitialize();\n        this._program.uninitialize();\n\n        this._defaultFBO.uninitialize();\n    }\n\n    protected onDiscarded(): void {\n        this._altered.alter('canvasSize');\n        this._altered.alter('clearColor');\n        this._altered.alter('frameSize');\n    }\n\n    /**\n     * This is invoked in order to check if rendering of a frame is required by means of implementation specific\n     * evaluation (e.g., lazy non continuous rendering). Regardless of the return value a new frame (preparation,\n     * frame, swap) might be invoked anyway, e.g., when update is forced or canvas or context properties have\n     * changed or the renderer was invalidated @see{@link invalidate}.\n     * @returns whether to redraw\n     */\n    protected onUpdate(): boolean {\n\n        return this._altered.any;\n    }\n\n    /**\n     * This is invoked in order to prepare rendering of one or more frames, regarding multi-frame rendering and\n     * camera-updates.\n     */\n    protected onPrepare(): void {\n        const gl = this._context.gl;\n\n        if (this._altered.canvasSize) {\n            const aspect = this._canvasSize[0] / this._canvasSize[1];\n            this._program.bind();\n            gl.uniform1f(this._program.uniform('u_aspect'), aspect);\n            this._program.unbind();\n        }\n\n        if (this._altered.clearColor) {\n            this._defaultFBO.clearColor(this._clearColor);\n        }\n\n        this._altered.reset();\n    }\n\n    /**\n     * After (1) update and (2) preparation are invoked, a frame is invoked. Renders both 2D and 3D labels.\n     * @param frameNumber - for intermediate frames in accumulation rendering\n     */\n    protected onFrame(/*frameNumber: number*/): void {\n        const gl = this._context.gl;\n\n        gl.viewport(0, 0, this._canvasSize[0], this._canvasSize[1]);\n\n        this._defaultFBO.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, false, false);\n\n        this._program.bind();\n\n        const t = ((new Date()).getTime() % 10000000) * 0.001;\n        gl.uniform1f(this._program.uniform('u_time'), t);\n\n        this._ndcTriangle.bind();\n\n\n        const b = 1.0;\n        const w = this._frameSize[0];\n        const h = (this._frameSize[1] - (3.0 - 1.0) * b) / 3.0;\n\n        gl.enable(gl.SCISSOR_TEST);\n\n        // Value Noise\n        gl.scissor(0, (h + b) * 0, w, h);\n        gl.uniform1i(this._uMethod, 2);\n        this._ndcTriangle.draw();\n\n        // Gradient Noise\n        gl.scissor(0, (h + b) * 1, w, h);\n        gl.uniform1i(this._uMethod, 1);\n        this._ndcTriangle.draw();\n\n        // Simplex Noise\n        gl.scissor(0, (h + b) * 2, w, h);\n        gl.uniform1i(this._uMethod, 0);\n        this._ndcTriangle.draw();\n\n        this._ndcTriangle.unbind();\n    }\n\n    protected onSwap(): void {\n        // this.invalidate(true);\n    }\n\n}\n\n\nexport class PerlinNoiseExample extends Example {\n\n    private _canvas: Canvas;\n    private _renderer: PerlinNoiseRenderer;\n\n    onInitialize(element: HTMLCanvasElement | string): boolean {\n\n        this._canvas = new Canvas(element, { antialias: false });\n        this._canvas.controller.multiFrameNumber = 1;\n        this._canvas.framePrecision = Wizard.Precision.byte;\n        this._canvas.frameScale = [1.0, 1.0];\n\n        this._renderer = new PerlinNoiseRenderer();\n        this._canvas.renderer = this._renderer;\n\n        return true;\n    }\n\n    onUninitialize(): void {\n        this._canvas.dispose();\n        (this._renderer as Renderer).uninitialize();\n    }\n\n    get canvas(): Canvas {\n        return this._canvas;\n    }\n\n    get renderer(): PerlinNoiseRenderer {\n        return this._renderer;\n    }\n\n}\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__4160__","Example","Initializable","showSpinner","document","getElementsByClassName","item","style","display","hideSpinner","expose","window","this","canvas","context","controller","renderer","initialize","element","result","onInitialize","loadingStatus$","subscribe","status","LoadingStatus","Finished","Started","uninitialize","onUninitialize","enableFullscreenOnCtrlClick","e","addEventListener","event","ctrlKey","viewer","Fullscreen","toggle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","PerlinNoiseRenderer","Renderer","callback","_defaultFBO","DefaultFramebuffer","_context","bind","gl","_ndcTriangle","NdcFillingTriangle","vert","Shader","VERTEX_SHADER","frag","FRAGMENT_SHADER","_program","Program","attribute","vertexLocation","link","_uMethod","uniform","aspect","_canvasSize","uniform1f","Math","random","unbind","finishLoading","super","onDiscarded","_altered","alter","onUpdate","any","onPrepare","canvasSize","clearColor","_clearColor","reset","onFrame","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","t","Date","getTime","w","_frameSize","h","enable","SCISSOR_TEST","scissor","uniform1i","draw","onSwap","PerlinNoiseExample","_canvas","Canvas","antialias","multiFrameNumber","framePrecision","Wizard","Precision","byte","frameScale","_renderer","dispose"],"sourceRoot":""}