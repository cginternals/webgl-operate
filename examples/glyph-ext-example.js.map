{"version":3,"file":"glyph-ext-example.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,mBAC7B,GAAqB,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,aAAcJ,OAClB,CACJ,IAAIM,EAAuB,iBAAZL,QAAuBD,EAAQG,QAAQ,cAAgBH,EAAQD,EAAgB,WAC9F,IAAI,IAAIQ,KAAKD,GAAuB,iBAAZL,QAAuBA,QAAUF,GAAMQ,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAOC,G,2GCNV,gBAWA,MAAsBC,UAAgB,EAAAC,cAKxBC,cACiBC,SAASC,uBAAuB,WAAWC,KAAK,GACvCC,MAAMC,QAAU,QACpD,CAKUC,cACiBL,SAASC,uBAAuB,WAAWC,KAAK,GACvCC,MAAMC,QAAU,MACpD,CAEUE,SAELC,OAAuB,OAAIC,KAAKC,OAChCF,OAAwB,QAAIC,KAAKC,OAAOC,QACxCH,OAA2B,WAAIC,KAAKC,OAAOE,WAE3CJ,OAAyB,SAAIC,KAAKI,QACvC,CAEAC,WAAWC,GACP,MAAMC,EAASP,KAAKQ,aAAaF,GAYjC,OAVAN,KAAKI,SAASK,eAAeC,WAAWC,IAChCA,IAAW,EAAAC,cAAcC,SACzBb,KAAKH,cACEc,IAAW,EAAAC,cAAcE,SAChCd,KAAKT,a,IAIbS,KAAKF,SAEES,CACX,CAEAQ,eACIf,KAAKgB,gBACT,CAUAC,8BAEI,MAAMC,EAAIlB,KAAKC,OAAOK,QACtBY,EAAEC,iBAAiB,SAAUC,IACrBA,EAAMC,SAAW,EAAAC,OAAOC,WAAWC,OAAON,E,GAEtD,EA7DJ,W,WCdArC,EAAOD,QAAUQ,C,GCCbqC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAahD,QAGrB,IAAIC,EAAS4C,EAAyBE,GAAY,CAGjD/C,QAAS,CAAC,GAOX,OAHAkD,EAAoBH,GAAU9C,EAAQA,EAAOD,QAAS8C,GAG/C7C,EAAOD,OACf,C,uGCnBA,gBAEA,UAiBA,UAOA,MAAMmD,UAAyB,EAAAC,SAA/B,c,oBAEc,KAAAC,aAAc,CAkK5B,CA9IczB,aAAaN,EAAkBgC,EACrCC,GA0CA,OAtCAnC,KAAKoC,YAAc,IAAI,EAAAC,mBAAmBrC,KAAKsC,SAAU,cACzDtC,KAAKoC,YAAY/B,aAIjBL,KAAKuC,QAAU,IAAI,EAAAC,OACnBxC,KAAKuC,QAAQE,IAAM,EAAAC,KAAKC,WAAW,EAAK,EAAK,GAC7C3C,KAAKuC,QAAQK,OAAS,EAAAF,KAAKC,WAAW,EAAK,EAAK,GAChD3C,KAAKuC,QAAQM,GAAK,EAAAH,KAAKC,WAAW,EAAK,EAAK,GAC5C3C,KAAKuC,QAAQO,KAAO,GACpB9C,KAAKuC,QAAQQ,IAAM,EAEnB/C,KAAKgD,YAAc,IAAI,EAAAC,WAAWf,EAAUC,GAC5CnC,KAAKgD,YAAYE,OAASlD,KAAKuC,QAI/BvC,KAAKmD,WAAa,IAAI,EAAAC,gBAAgBlD,GACtCF,KAAKmD,WAAW9C,aAChBL,KAAKmD,WAAWD,OAASlD,KAAKuC,QAC9BvC,KAAKmD,WAAWE,OAASrD,KAAKoC,YAC9BpC,KAAKmD,WAAWG,WAAY,EAE5B,EAAAC,SAASC,UAAU,iCACf,IAAIC,IAAoB,CAAC,CAAC,EAAG,yCAA0CvD,GACtEwD,MAAMC,IACH,IAAK,MAAMC,KAAS5D,KAAKmD,WAAWU,OAChCD,EAAMD,SAAWA,EAErB3D,KAAK8D,UAAYH,EAEjB3D,KAAK+D,gBACL/D,KAAKgE,YAAW,EAAK,IAExBC,OAAOC,GAAW,EAAAC,YAAYC,IAAI,EAAAD,YAAYE,SAASC,MAAOJ,KAEnElE,KAAKuE,cAEE,CACX,CAKUvD,iBACNwD,MAAMzD,eAENf,KAAKoC,YAAYrB,eACjBf,KAAKmD,WAAWpC,cACpB,CAEU0D,cACNzE,KAAK0E,SAASC,MAAM,cACpB3E,KAAK0E,SAASC,MAAM,cACpB3E,KAAK0E,SAASC,MAAM,aACpB3E,KAAK0E,SAASC,MAAM,mBACxB,CASUC,WACN5E,KAAKgD,YAAY6B,SAEjB,IAAK,MAAMjB,KAAS5D,KAAKmD,WAAWU,OAChC,GAAID,EAAMkB,SAAWlB,EAAMmB,MAAMD,QAC7B,OAAO,EAGf,OAAO9E,KAAK0E,SAASM,KAAOhF,KAAKuC,QAAQuC,OAC7C,CAMUG,YAEFjF,KAAK0E,SAASQ,aACdlF,KAAKuC,QAAQ4C,OAASnF,KAAKoF,YAAY,GAAKpF,KAAKoF,YAAY,GAC7DpF,KAAKuC,QAAQ8C,SAAWrF,KAAKoF,aAG7BpF,KAAK0E,SAASY,YACdtF,KAAKoC,YAAYkD,WAAWtF,KAAKuF,aAGrCvF,KAAKmD,WAAW0B,SAEhB7E,KAAK0E,SAASc,QACdxF,KAAKuC,QAAQuC,SAAU,CAC3B,CAMUW,QAAQC,GACd,MAAMC,EAAK3F,KAAKsC,SAASqD,GAEzBA,EAAGN,SAAS,EAAG,EAAGrF,KAAKuC,QAAQ8C,SAAS,GAAIrF,KAAKuC,QAAQ8C,SAAS,IAElErF,KAAKoC,YAAYwD,MAAMD,EAAGE,iBAAmBF,EAAGG,kBAAkB,GAAM,GACxE9F,KAAKmD,WAAW4C,OACpB,CAMUxB,aAQNvE,KAAKgG,WAAa,IAAI,EAAAC,gBAAgB,IAAI,EAAAC,KAAK,8RAAmB,EAAAC,MAAMC,KAAKC,QAC7ErG,KAAKgG,WAAWM,MAAO,EACvBtG,KAAKgG,WAAWO,UAAY,GAC5BvG,KAAKgG,WAAWQ,SAAW,EAAE,GAAK,GAAK,GACvCxG,KAAKgG,WAAWnD,GAAK,CAAC,EAAK,EAAK,GAEhC7C,KAAKmD,WAAWU,OAAS,CAAC7D,KAAKgG,YAE/B,IAAK,MAAMpC,KAAS5D,KAAKmD,WAAWU,OAChCD,EAAM6C,SAAW,IACjB7C,EAAMmB,MAAM2B,QAAQ,QACpB9C,EAAM+C,aAAe,EAAAR,MAAMS,KAAKC,KAExC,EAKJ,MAAaC,UAAwB,EAAAzH,QAKjCmB,aAAaF,GAETN,KAAK+G,QAAU,IAAI,EAAAC,OAAO1G,EAAS,CAAE2G,WAAW,IAChDjH,KAAK+G,QAAQ5G,WAAW+G,iBAAmB,EAC3ClH,KAAK+G,QAAQI,eAAiB,EAAAC,OAAOC,UAAUC,KAC/CtH,KAAK+G,QAAQQ,WAAa,CAAC,EAAK,GAEhCvH,KAAKwH,UAAY,IAAIzF,EACrB/B,KAAK+G,QAAQ3G,SAAWJ,KAAKwH,UAI7B,MAKMC,EAAKjI,SAASkI,cAAc,MAClCD,EAAGE,aAAa,QAAS,oKACzB,MAAMC,EAAKpI,SAASkI,cAAc,MAClCE,EAAGD,aAAa,QAAS,qKAGzB,MAAME,EAAS7H,KAAK+G,QAAQzG,QAASwH,cAC/BC,EAAY/H,KAAK+G,QAAQzG,QAI/B,OAHAuH,EAAOG,aAAaP,EAAIM,GACxBF,EAAOG,aAAaJ,EAAIG,IAEjB,CACX,CAEA/G,iBACIhB,KAAK+G,QAAQkB,UACZjI,KAAKwH,UAAuBzG,cACjC,CAEId,aACA,OAAOD,KAAK+G,OAChB,CAEI3G,eACA,OAAOJ,KAAKwH,SAChB,EA/CJ,mB","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./example.ts","webpack:///external umd \"gloperate\"","webpack:///webpack/bootstrap","webpack:///./glyph-ext-example.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"gloperate\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"gloperate\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"gloperate\")) : factory(root[\"gloperate\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__4160__) => {\nreturn ","\n/* spellchecker: disable */\n\nimport {\n    Canvas,\n    Initializable,\n    LoadingStatus,\n    Renderer,\n    viewer,\n} from 'webgl-operate';\n\n/* spellchecker: enable */\n\n\nexport abstract class Example extends Initializable {\n\n    /**\n     * Hide the loading spinner.\n     */\n    protected showSpinner(): void {\n        const spinnerElement = document.getElementsByClassName('spinner').item(0)!;\n        (spinnerElement as HTMLElement).style.display = 'inline';\n    }\n\n    /**\n     * Hide the loading spinner.\n     */\n    protected hideSpinner(): void {\n        const spinnerElement = document.getElementsByClassName('spinner').item(0)!;\n        (spinnerElement as HTMLElement).style.display = 'none';\n    }\n\n    protected expose(): void {\n\n        (window as any)['canvas'] = this.canvas;\n        (window as any)['context'] = this.canvas.context;\n        (window as any)['controller'] = this.canvas.controller;\n\n        (window as any)['renderer'] = this.renderer;\n    }\n\n    initialize(element: HTMLCanvasElement | string): boolean {\n        const result = this.onInitialize(element);\n\n        this.renderer.loadingStatus$.subscribe((status: LoadingStatus) => {\n            if (status === LoadingStatus.Finished) {\n                this.hideSpinner();\n            } else if (status === LoadingStatus.Started) {\n                this.showSpinner();\n            }\n        });\n\n        this.expose();\n\n        return result;\n    }\n\n    uninitialize(): void {\n        this.onUninitialize();\n    }\n\n    abstract onInitialize(element: HTMLCanvasElement | string): boolean;\n\n    abstract onUninitialize(): void;\n\n    abstract get renderer(): Renderer;\n\n    abstract get canvas(): Canvas;\n\n    enableFullscreenOnCtrlClick(): void {\n\n        const e = this.canvas.element;\n        e.addEventListener('click', (event) => {\n            if (event.ctrlKey) { viewer.Fullscreen.toggle(e); }\n        });\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4160__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n/* spellchecker: disable */\n\nimport { auxiliaries, vec3 } from 'webgl-operate';\n\nimport {\n    Camera,\n    Canvas,\n    Context,\n    DefaultFramebuffer,\n    EventProvider,\n    FontFace,\n    Invalidate,\n    Label,\n    LabelRenderPass,\n    Navigation,\n    Position3DLabel,\n    Renderer,\n    Text,\n    Wizard,\n} from 'webgl-operate';\n\nimport { Example } from './example';\n\n/* spellchecker: enable */\n\n// tslint:disable:max-classes-per-file\n\n\nclass GlyphExtRenderer extends Renderer {\n\n    protected _extensions = false;\n\n    protected _labelPass: LabelRenderPass;\n\n    protected _labelWrap: Position3DLabel;\n\n    protected _camera: Camera;\n    protected _navigation: Navigation;\n\n    protected _defaultFBO: DefaultFramebuffer;\n\n    protected _fontFace: FontFace | undefined;\n\n    /**\n     * Initializes and sets up rendering passes, navigation, loads a font face and links shaders with program.\n     * @param context - valid context to create the object for.\n     * @param identifier - meaningful name for identification of this instance.\n     * @param eventProvider - required for mouse interaction\n     * @returns - whether initialization was successful\n     */\n    protected onInitialize(context: Context, callback: Invalidate,\n        eventProvider: EventProvider): boolean {\n\n        /* Create framebuffers, textures, and render buffers. */\n\n        this._defaultFBO = new DefaultFramebuffer(this._context, 'DefaultFBO');\n        this._defaultFBO.initialize();\n\n        /* Create and configure test navigation. */\n\n        this._camera = new Camera();\n        this._camera.eye = vec3.fromValues(0.0, 0.0, 1.0);\n        this._camera.center = vec3.fromValues(0.0, 0.0, 0.0);\n        this._camera.up = vec3.fromValues(0.0, 1.0, 0.0);\n        this._camera.near = 0.1;\n        this._camera.far = 4.0;\n\n        this._navigation = new Navigation(callback, eventProvider);\n        this._navigation.camera = this._camera;\n\n        /* Create and configure label pass. */\n\n        this._labelPass = new LabelRenderPass(context);\n        this._labelPass.initialize();\n        this._labelPass.camera = this._camera;\n        this._labelPass.target = this._defaultFBO;\n        this._labelPass.depthMask = false;\n\n        FontFace.fromFiles('./data/opensans2048p160d16.fnt',\n            new Map<number, string>([[0, './data/timesnewroman2080p160d16.png']]), context)\n            .then((fontFace) => {\n                for (const label of this._labelPass.labels) {\n                    label.fontFace = fontFace;\n                }\n                this._fontFace = fontFace;\n\n                this.finishLoading();\n                this.invalidate(true);\n            })\n            .catch((reason) => auxiliaries.log(auxiliaries.LogLevel.Error, reason));\n\n        this.setupScene();\n\n        return true;\n    }\n\n    /**\n     * Uninitializes Buffers, Textures, and Program.\n     */\n    protected onUninitialize(): void {\n        super.uninitialize();\n\n        this._defaultFBO.uninitialize();\n        this._labelPass.uninitialize();\n    }\n\n    protected onDiscarded(): void {\n        this._altered.alter('canvasSize');\n        this._altered.alter('clearColor');\n        this._altered.alter('frameSize');\n        this._altered.alter('multiFrameNumber');\n    }\n\n    /**\n     * This is invoked in order to check if rendering of a frame is required by means of implementation specific\n     * evaluation (e.g., lazy non continuous rendering). Regardless of the return value a new frame (preparation,\n     * frame, swap) might be invoked anyway, e.g., when update is forced or canvas or context properties have\n     * changed or the renderer was invalidated @see{@link invalidate}.\n     * @returns whether to redraw\n     */\n    protected onUpdate(): boolean {\n        this._navigation.update();\n\n        for (const label of this._labelPass.labels) {\n            if (label.altered || label.color.altered) {\n                return true;\n            }\n        }\n        return this._altered.any || this._camera.altered;\n    }\n\n    /**\n     * This is invoked in order to prepare rendering of one or more frames, regarding multi-frame rendering and\n     * camera-updates.\n     */\n    protected onPrepare(): void {\n\n        if (this._altered.canvasSize) {\n            this._camera.aspect = this._canvasSize[0] / this._canvasSize[1];\n            this._camera.viewport = this._canvasSize;\n        }\n\n        if (this._altered.clearColor) {\n            this._defaultFBO.clearColor(this._clearColor);\n        }\n\n        this._labelPass.update();\n\n        this._altered.reset();\n        this._camera.altered = false;\n    }\n\n    /**\n     * After (1) update and (2) preparation are invoked, a frame is invoked. Renders both 2D and 3D labels.\n     * @param frameNumber - for intermediate frames in accumulation rendering\n     */\n    protected onFrame(frameNumber: number): void {\n        const gl = this._context.gl;\n\n        gl.viewport(0, 0, this._camera.viewport[0], this._camera.viewport[1]);\n\n        this._defaultFBO.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, true, false);\n        this._labelPass.frame();\n    }\n\n    /**\n     * Sets up an example scene with 2D and 3D labels and sets the corresponding data on LabelGeometries. The\n     * FontFace is set on each label by the LabelRenderPass.\n     */\n    protected setupScene(): void {\n\n        /** Wrapped labels, showcasing Ellipsis and NewLine */\n\n        const kafka = 'One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in \\\nhis bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his \\\nbrown belly, slightly domed and divided by arches into stiff sections.';\n\n        this._labelWrap = new Position3DLabel(new Text(`Wrap: ${kafka}`), Label.Type.Static);\n        this._labelWrap.wrap = true;\n        this._labelWrap.lineWidth = 0.8;\n        this._labelWrap.position = [-0.3, 0.3, 0.0];\n        this._labelWrap.up = [0.0, 1.0, 0.0];\n\n        this._labelPass.labels = [this._labelWrap];\n\n        for (const label of this._labelPass.labels) {\n            label.fontSize = 0.05;\n            label.color.fromHex('#fff');\n            label.fontSizeUnit = Label.Unit.World;\n        }\n    }\n\n}\n\n\nexport class GlyphExtExample extends Example {\n\n    private _canvas: Canvas;\n    private _renderer: GlyphExtRenderer;\n\n    onInitialize(element: HTMLCanvasElement | string): boolean {\n\n        this._canvas = new Canvas(element, { antialias: false });\n        this._canvas.controller.multiFrameNumber = 1;\n        this._canvas.framePrecision = Wizard.Precision.byte;\n        this._canvas.frameScale = [1.0, 1.0];\n\n        this._renderer = new GlyphExtRenderer();\n        this._canvas.renderer = this._renderer;\n\n        // Create a target cross as reference for coordinate origin [0,0,0]\n\n        const hlStyle = 'z-index: 1; position: absolute; width: 100%; margin: 0; margin-left: 0%;'\n            + 'border: none; border-bottom: 1pt solid #1c75bc; border-top: 1pt solid #1c75bc;';\n        const vlStyle = 'z-index: 1; position: absolute; height: 100%; margin: 0; margin-top: 0%;'\n            + 'border: none; border-left: 1pt solid #1cbc75; border-right: 1pt solid #1cbc75;';\n\n        const hl = document.createElement('hl');\n        hl.setAttribute('style', `${hlStyle} top: 50%;`);\n        const vl = document.createElement('vl');\n        vl.setAttribute('style', `${vlStyle} left: 50%;`);\n\n\n        const parent = this._canvas.element!.parentElement!;\n        const reference = this._canvas.element!;\n        parent.insertBefore(hl, reference);\n        parent.insertBefore(vl, reference);\n\n        return true;\n    }\n\n    onUninitialize(): void {\n        this._canvas.dispose();\n        (this._renderer as Renderer).uninitialize();\n    }\n\n    get canvas(): Canvas {\n        return this._canvas;\n    }\n\n    get renderer(): GlyphExtRenderer {\n        return this._renderer;\n    }\n\n}\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__4160__","Example","Initializable","showSpinner","document","getElementsByClassName","item","style","display","hideSpinner","expose","window","this","canvas","context","controller","renderer","initialize","element","result","onInitialize","loadingStatus$","subscribe","status","LoadingStatus","Finished","Started","uninitialize","onUninitialize","enableFullscreenOnCtrlClick","e","addEventListener","event","ctrlKey","viewer","Fullscreen","toggle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","GlyphExtRenderer","Renderer","_extensions","callback","eventProvider","_defaultFBO","DefaultFramebuffer","_context","_camera","Camera","eye","vec3","fromValues","center","up","near","far","_navigation","Navigation","camera","_labelPass","LabelRenderPass","target","depthMask","FontFace","fromFiles","Map","then","fontFace","label","labels","_fontFace","finishLoading","invalidate","catch","reason","auxiliaries","log","LogLevel","Error","setupScene","super","onDiscarded","_altered","alter","onUpdate","update","altered","color","any","onPrepare","canvasSize","aspect","_canvasSize","viewport","clearColor","_clearColor","reset","onFrame","frameNumber","gl","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","frame","_labelWrap","Position3DLabel","Text","Label","Type","Static","wrap","lineWidth","position","fontSize","fromHex","fontSizeUnit","Unit","World","GlyphExtExample","_canvas","Canvas","antialias","multiFrameNumber","framePrecision","Wizard","Precision","byte","frameScale","_renderer","hl","createElement","setAttribute","vl","parent","parentElement","reference","insertBefore","dispose"],"sourceRoot":""}